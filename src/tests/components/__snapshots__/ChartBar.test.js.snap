// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ChartBar /> renders correctly 1`] = `
<div
  className="card-chart card-chart--big"
  style={
    Object {
      "backgroundColor": "#606060",
      "boxShadow": "2px 2px 2px black",
      "color": "white",
      "height": undefined,
    }
  }
>
  <ResponsiveContainer
    debounce={0}
    height="100%"
    width="100%"
  >
    <BarChart
      barCategoryGap="10%"
      barGap={4}
      data={
        Array [
          Object {
            "average": 0,
            "best": 0,
            "name": "Bubble Sort",
            "worst": 0,
          },
          Object {
            "average": 0,
            "best": 0,
            "name": "Quick Sort",
            "worst": 0,
          },
        ]
      }
      layout="horizontal"
      margin={
        Object {
          "bottom": 5,
          "left": 5,
          "right": 5,
          "top": 5,
        }
      }
      reverseStackOrder={false}
      stackOffset="none"
      syncMethod="index"
    >
      <CartesianGrid
        fill="none"
        horizontal={true}
        horizontalFill={Array []}
        horizontalPoints={Array []}
        stroke="#ccc"
        strokeDasharray="3 3"
        vertical={true}
        verticalFill={Array []}
        verticalPoints={Array []}
      />
      <XAxis
        allowDataOverflow={false}
        allowDecimals={true}
        allowDuplicatedCategory={true}
        dataKey="name"
        domain={
          Array [
            0,
            "auto",
          ]
        }
        height={30}
        hide={false}
        mirror={false}
        orientation="bottom"
        padding={
          Object {
            "left": 0,
            "right": 0,
          }
        }
        reversed={false}
        scale="auto"
        tickCount={5}
        type="category"
        width={0}
        xAxisId={0}
      />
      <YAxis
        allowDataOverflow={false}
        allowDecimals={true}
        allowDuplicatedCategory={true}
        domain={
          Array [
            0,
            "auto",
          ]
        }
        height={0}
        hide={false}
        mirror={false}
        orientation="left"
        padding={
          Object {
            "bottom": 0,
            "top": 0,
          }
        }
        reversed={false}
        scale="auto"
        tickCount={5}
        type="number"
        width={60}
        yAxisId={0}
      />
      <Tooltip
        active={false}
        allowEscapeViewBox={
          Object {
            "x": false,
            "y": false,
          }
        }
        animationDuration={400}
        animationEasing="ease"
        contentStyle={Object {}}
        coordinate={
          Object {
            "x": 0,
            "y": 0,
          }
        }
        cursor={true}
        cursorStyle={Object {}}
        filterNull={true}
        isAnimationActive={true}
        itemStyle={Object {}}
        labelStyle={Object {}}
        offset={10}
        separator=" : "
        trigger="hover"
        useTranslate3d={false}
        viewBox={
          Object {
            "x1": 0,
            "x2": 0,
            "y1": 0,
            "y2": 0,
          }
        }
        wrapperStyle={Object {}}
      />
      <Legend
        align="right"
        iconSize={14}
        layout="horizontal"
        verticalAlign="top"
      />
      <Bar
        animationBegin={0}
        animationDuration={400}
        animationEasing="ease"
        data={Array []}
        dataKey="best"
        fill="#6F52ED"
        hide={false}
        isAnimationActive={true}
        key="best"
        layout="vertical"
        legendType="rect"
        minPointSize={0}
        xAxisId={0}
        yAxisId={0}
      >
        <LabelList
          dataKey="best"
          position="top"
          valueAccessor={[Function]}
        />
      </Bar>
      <Bar
        animationBegin={0}
        animationDuration={400}
        animationEasing="ease"
        data={Array []}
        dataKey="worst"
        fill="#28E451"
        hide={false}
        isAnimationActive={true}
        key="worst"
        layout="vertical"
        legendType="rect"
        minPointSize={0}
        xAxisId={0}
        yAxisId={0}
      >
        <LabelList
          dataKey="worst"
          position="top"
          valueAccessor={[Function]}
        />
      </Bar>
      <Bar
        animationBegin={0}
        animationDuration={400}
        animationEasing="ease"
        data={Array []}
        dataKey="average"
        fill="#FF7A00"
        hide={false}
        isAnimationActive={true}
        key="average"
        layout="vertical"
        legendType="rect"
        minPointSize={0}
        xAxisId={0}
        yAxisId={0}
      >
        <LabelList
          dataKey="average"
          position="top"
          valueAccessor={[Function]}
        />
      </Bar>
    </BarChart>
  </ResponsiveContainer>
</div>
`;
